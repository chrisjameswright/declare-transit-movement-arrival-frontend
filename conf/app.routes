# microservice specific routes

GET        /                                                 controllers.IndexController.onPageLoad

GET        /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                                   controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /this-service-has-been-reset                      controllers.SessionExpiredController.onPageLoad

GET        /:mrn/checkYourAnswers                            controllers.CheckYourAnswersController.onPageLoad(mrn: MovementReferenceNumber)
POST       /:mrn/checkYourAnswers                            controllers.CheckYourAnswersController.onPost(mrn: MovementReferenceNumber)

GET        /unauthorised                                     controllers.UnauthorisedController.onPageLoad

GET        /accessibility-statement                          controllers.AccessibilityController.onPageLoad

GET        /movementReferenceNumber                          controllers.MovementReferenceNumberController.onPageLoad
POST       /movementReferenceNumber                          controllers.MovementReferenceNumberController.onSubmit
GET        /changeMovementReferenceNumber                    controllers.MovementReferenceNumberController.onPageLoad
POST       /changeMovementReferenceNumber                    controllers.MovementReferenceNumberController.onSubmit

GET        /:mrn/goodsLocation                               controllers.GoodsLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/goodsLocation                               controllers.GoodsLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeGoodsLocation                         controllers.GoodsLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeGoodsLocation                         controllers.GoodsLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/presentationOffice                          controllers.PresentationOfficeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/presentationOffice                          controllers.PresentationOfficeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changePresentationOffice                    controllers.PresentationOfficeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changePresentationOffice                    controllers.PresentationOfficeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/customsSubPlace                             controllers.CustomsSubPlaceController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/customsSubPlace                             controllers.CustomsSubPlaceController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeCustomsSubPlace                       controllers.CustomsSubPlaceController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeCustomsSubPlace                       controllers.CustomsSubPlaceController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/authorisedLocation                          controllers.AuthorisedLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/authorisedLocation                          controllers.AuthorisedLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeAuthorisedLocation                    controllers.AuthorisedLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeAuthorisedLocation                    controllers.AuthorisedLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderAddress                               controllers.TraderAddressController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderAddress                               controllers.TraderAddressController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderAddress                         controllers.TraderAddressController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderAddress                         controllers.TraderAddressController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderEori                                  controllers.TraderEoriController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderEori                                  controllers.TraderEoriController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderEori                            controllers.TraderEoriController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderEori                            controllers.TraderEoriController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderName                                  controllers.TraderNameController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderName                                  controllers.TraderNameController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderName                            controllers.TraderNameController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderName                            controllers.TraderNameController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/useDifferentService                         controllers.UseDifferentServiceController.onPageLoad(mrn: MovementReferenceNumber)

GET        /:mrn/confirmation                                controllers.ConfirmationController.onPageLoad(mrn: MovementReferenceNumber)

GET        /:mrn/incidentOnRoute                             controllers.IncidentOnRouteController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/incidentOnRoute                             controllers.IncidentOnRouteController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeIncidentOnRoute                       controllers.IncidentOnRouteController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeIncidentOnRoute                       controllers.IncidentOnRouteController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/eventCountry/:index                         controllers.events.EventCountryController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/eventCountry/:index                         controllers.events.EventCountryController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/changeEventCountry/:index                   controllers.events.EventCountryController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/changeEventCountry/:index                   controllers.events.EventCountryController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/eventPlace/:index                           controllers.events.EventPlaceController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/eventPlace/:index                           controllers.events.EventPlaceController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/changeEventPlace/:index                     controllers.events.EventPlaceController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/changeEventPlace/:index                     controllers.events.EventPlaceController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/eventReported/:index                        controllers.events.EventReportedController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/eventReported/:index                        controllers.events.EventReportedController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/changeEventReported/:index                  controllers.events.EventReportedController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/changeEventReported/:index                  controllers.events.EventReportedController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/incidentInformation/:index                  controllers.events.IncidentInformationController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/incidentInformation/:index                  controllers.events.IncidentInformationController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/changeIncidentInformation/:index            controllers.events.IncidentInformationController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/changeIncidentInformation/:index            controllers.events.IncidentInformationController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/isTranshipment/:index                       controllers.events.IsTranshipmentController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/isTranshipment/:index                       controllers.events.IsTranshipmentController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/changeIsTranshipment/:index                 controllers.events.IsTranshipmentController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/changeIsTranshipment/:index                 controllers.events.IsTranshipmentController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/checkEventAnswers/:index                    controllers.events.CheckEventAnswersController.onPageLoad(mrn: MovementReferenceNumber, index: Int)
POST       /:mrn/checkEventAnswers/:index                    controllers.events.CheckEventAnswersController.onSubmit(mrn: MovementReferenceNumber, index: Int)

GET        /:mrn/isTraderAddressPlaceOfNotification          controllers.IsTraderAddressPlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/isTraderAddressPlaceOfNotification          controllers.IsTraderAddressPlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeIsTraderAddressPlaceOfNotification    controllers.IsTraderAddressPlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeIsTraderAddressPlaceOfNotification    controllers.IsTraderAddressPlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/placeOfNotification                         controllers.PlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/placeOfNotification                         controllers.PlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changePlaceOfNotification                   controllers.PlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changePlaceOfNotification                   controllers.PlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/addEvent                        controllers.events.AddEventController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/addEvent                        controllers.events.AddEventController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeAddEvent                  controllers.events.AddEventController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeAddEvent                  controllers.events.AddEventController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
